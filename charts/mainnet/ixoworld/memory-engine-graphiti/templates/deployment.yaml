apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "memory-engine-graphiti.fullname" . }}
  labels:
    {{- include "memory-engine-graphiti.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "memory-engine-graphiti.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "memory-engine-graphiti.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "memory-engine-graphiti.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: worker
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.containers.worker.image }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- toYaml .Values.env | nindent 12 }}
          resources:
            {{- toYaml .Values.containers.worker.resources | nindent 12 }}
        - name: api-server
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.containers.apiServer.image }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- toYaml .Values.env | nindent 12 }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              {{- if .Values.hostPort }}
              hostPort: {{ .Values.hostPort }}
              {{- end }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: http
            initialDelaySeconds: 60
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: http
            initialDelaySeconds: 60
          resources:
            {{- toYaml .Values.containers.apiServer.resources | nindent 12 }}
          volumeMounts:
            - name: {{ .Release.Name }}-storage
              mountPath: {{ $matrixBotStorePath := "/storage" }}{{ range .Values.env }}{{ if eq .name "MATRIX_BOT_STORE_PATH" }}{{ $matrixBotStorePath = .value }}{{ end }}{{ end }}{{ $matrixBotStorePath }}
        - name: mcp-server
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.containers.mcpServer.image }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- toYaml .Values.env | nindent 12 }}
          ports:
            - name: mcp
              containerPort: {{ .Values.service.portMcp }}
              {{- if .Values.hostPortMcp }}
              hostPort: {{ .Values.hostPortMcp }}
              {{- end }}
              protocol: TCP
          resources:
            {{- toYaml .Values.containers.mcpServer.resources | nindent 12 }}
          volumeMounts:
            - name: {{ .Release.Name }}-storage
              mountPath: {{ $matrixBotStorePath := "/storage" }}{{ range .Values.env }}{{ if eq .name "MATRIX_BOT_STORE_PATH" }}{{ $matrixBotStorePath = .value }}{{ end }}{{ end }}{{ $matrixBotStorePath }}
      volumes:
        - name: {{ .Release.Name }}-storage
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-storage
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
