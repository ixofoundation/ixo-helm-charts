apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ixo-matrix-state-bot.fullname" . }}
  labels:
    {{- include "ixo-matrix-state-bot.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "ixo-matrix-state-bot.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ixo-matrix-state-bot.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ixo-matrix-state-bot.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: gcp-backups
          image: google/cloud-sdk:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /bot/gcp-key/key.json
          command:
            - "/bin/sh"
            - "-c"
            - |
              apt-get update && apt-get install -y zip
              gcloud auth login --cred-file=$GOOGLE_APPLICATION_CREDENTIALS
              while true; do
                cd {{ .Values.backup.path }} && zip -r -0 data.zip .
                gsutil cp -r {{ .Values.backup.path }}/data.zip {{ .Values.backup.gcs.bucket }}/$(date +'%Y-%m-%d_%H-%M-%S')/
                rm -f {{ .Values.backup.path }}/data.zip
                sleep 86400 # 24 hours
              done
          volumeMounts:
            - name: gcp-service-account-key
              mountPath: /bot/gcp-key
            - name: storage
              mountPath: {{ .Values.backup.path }}
          resources:
            {{- toYaml .Values.backup.resources | nindent 12 }}
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /bot/config
              readOnly: true
            - name: storage
              mountPath: /bot/storage
      volumes:
        - name: gcp-service-account-key
          secret:
            secretName: gcp-key-secret
        - name: config
          configMap:
            name: {{ include "ixo-matrix-state-bot.fullname" . }}-config
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-storage
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
